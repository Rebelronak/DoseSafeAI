version: '3.8'

services:
  # üêç Backend Service
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: dosesafe-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=True
      - CORS_ORIGINS=http://localhost:5173,http://localhost:3000
      - GROQ_API_KEY=${GROQ_API_KEY:-}
    volumes:
      - ./backend:/app/backend
      - ./ml_models:/app/ml_models
      - ./uploads:/app/uploads
      - ./database:/app/database
      - ./logs:/app/logs
    networks:
      - dosesafe-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # üé® Frontend Development Service
  frontend-dev:
    image: node:18-alpine
    container_name: dosesafe-frontend-dev
    working_dir: /app
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    networks:
      - dosesafe-network
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:5000
    profiles:
      - development

  # üìä Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: dosesafe-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - dosesafe-network
    command: redis-server --appendonly yes
    profiles:
      - cache

  # üîç Nginx Reverse Proxy (production)
  nginx:
    image: nginx:alpine
    container_name: dosesafe-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - dosesafe-network
    profiles:
      - production

volumes:
  redis-data:

networks:
  dosesafe-network:
    driver: bridge
